#!/usr/bin/env bash

set -e

if [ $# -lt 2 ]; then
  echo "Usage: $0 <sha> <clone dir>" 1>&2
  exit 1
fi

sha="$1"
shift
scala_version="$1"
shift
adam_dir="$1"
shift

function contains() {
    local n=$#
    local value=${!n}
    for ((i=1;i < $#;i++)) {
        if [ "${!i}" == "${value}" ]; then
            return 0
        fi
    }
    return 1
}

adam_versions=("0.17.0" "0.17.1" "0.18.0" "0.18.1" "0.18.2" "0.19.0" "0.20.0")
if contains "${adam_versions[@]}" "$sha"; then
  echo "Detected ADAM version: $sha"
  if [ ! -d "$adam_dir" ]; then
    echo "Not found; downloading…"
    new_base="adam-${sha}-${scala_version}"
    original_base="adam-distribution_${scala_version}-${sha}"
    tar_gz="${original_base}-bin.tar.gz"
    tar_url="https://repo1.maven.org/maven2/org/bdgenomics/adam/adam-distribution_${scala_version}/${sha}/${tar_gz}"
    pushd "${ADAM_HELPERS_DIR}"
    if [ ! -s "$tar_gz" ]; then
      wget "$tar_url"
    fi
    tar xvzf "$tar_gz"
    mv "$original_base" "$new_base"
  fi
else
  echo "Detected git SHA: $sha"
  if [ ! -d "$adam_dir" ]; then
    echo "$adam_dir not found; cloning…"
    git clone "${ADAM_REPO_URL:-https://github.com/bigdatagenomics/adam.git}" "$adam_dir"
    pushd "$adam_dir"
    if ! git checkout "$sha"; then
      echo "Checking out $sha failed; rm'ing and exiting."
      popd
      rm -rf "$adam_dir"
      exit 1
    fi
  else
    pushd "$adam_dir"
  fi

  if ! compgen -G "$adam_dir"/adam-assembly/target/*.jar &> /dev/null; then
    echo "Assembly JAR not detected; building…"
    mvn package -DskipTests
  fi
fi
